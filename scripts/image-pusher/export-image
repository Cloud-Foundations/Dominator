#! /bin/bash --posix

set -e
set -o nounset

# Configuration. Quick and dirty for now.
readonly scratch_dir='/scratch'

# Pull in from the command line.
readonly type="$1"
readonly destination="$2"

if [ "$type" != "s3" ]; then
    echo "Unknown type"
    exit 1
fi

# Introspect.
readonly document_url='http://169.254.169.254/latest/dynamic/instance-identity/document'
readonly document="$(wget -q -O - "$document_url")"
readonly account_id="$(echo "$document" | fgrep 'accountId' | cut -d'"' -f 4)"
readonly region="$(echo "$document" | fgrep 'region' | cut -d'"' -f 4)"

# Load secrets (API keys). The following variables should be set:
#   AWS_ACCESS_KEY_ID
#   cert_file
#   key_file
#   AWS_SECRET_ACCESS_KEY
. "$scratch_dir/secrets"

readonly tmpdir="$(mktemp -d "$scratch_dir/$(basename "$0").XXXXXX")" || exit
trap "rm -rf $tmpdir" EXIT

cat > "$tmpdir/image"
ec2-bundle-image -c "$cert_file" -k "$key_file" -u "$account_id" \
  --image "$tmpdir/image" -d "$tmpdir" -r x86_64 --prefix image

# Version 1.5.7 of ec2-upload-bundle doesn't support colons in the name, and
# earlier versions don't support eu-central-1, so only use ec2-upload-bundle if
# there are no colons, otherwise do it the hard (but slower) way.
if ! echo "$destination" | fgrep -q :; then
    ec2-upload-bundle -b "$destination" -m "$tmpdir/image.manifest.xml"    \
                      -a "$AWS_ACCESS_KEY_ID" -s "$AWS_SECRET_ACCESS_KEY"  \
		      --batch --retry --region "$region"
    exit 0
fi
# Now do this the hard way :-(
readonly bucket="${destination%%/*}"
readonly destdir="${destination#*/}"
for file in "$tmpdir/image.manifest.xml" "$tmpdir"/image.part.*; do
    aws s3api put-object --acl aws-exec-read --bucket "$bucket" \
	--key "$destdir/${file##*/}" --body "$file" --region "$region" || exit
done
